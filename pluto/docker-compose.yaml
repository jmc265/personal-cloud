version: "3"

services:
  uptime-kuma:
    image: louislam/uptime-kuma
    container_name: uptime-kuma
    restart: unless-stopped
    volumes:
      - ${DOCKER_APP_DATA}/uptime-kuma:/app/data
    ports:
      - 3001:3001
    labels:
      - traefik.enable=true
      - traefik.http.routers.uptime.rule=Host(`uptime.${INET_DOMAIN}`)
      - traefik.http.routers.uptime.entrypoints=websecure
      - traefik.http.routers.uptime.tls=true
      - traefik.http.routers.uptime.tls.certresolver=letsencrypt

  healthchecks:
    image: linuxserver/healthchecks
    container_name: healthchecks
    environment:
      - TZ=Europe/London
      - SITE_ROOT=https://healthchecks.${INET_DOMAIN}
      - SITE_NAME=Health Checks
      - SUPERUSER_EMAIL=${ADMIN_EMAIL}
      - SUPERUSER_PASSWORD=${ADMIN_PASSWORD}
      - APPRISE_ENABLED=True
      - PING_BODY_LIMIT=100000
      - DEBUG=False
    restart: unless-stopped
    volumes:
      - ${DOCKER_APP_DATA}/healthchecks:/config
    ports:
      - 8000:8000
    labels:
      - traefik.enable=true
      - traefik.http.routers.healthchecks.rule=Host(`healthchecks.${INET_DOMAIN}`)
      - traefik.http.routers.healthchecks.entrypoints=websecure
      - traefik.http.routers.healthchecks.tls=true
      - traefik.http.routers.healthchecks.tls.certresolver=letsencrypt

  newrelic-agent:
    image: newrelic/infrastructure:latest
    container_name: newrelic-agent
    environment:
      - NRIA_LICENSE_KEY=${NRIA_LICENSE_KEY}
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    volumes:
      - /:/host:ro
      - /var/run/docker.sock:/var/run/docker.sock
    privileged: true
    network_mode: host
    pid: host 


  syncthing:
    container_name: syncthing
    image: linuxserver/syncthing
    environment:
      - TZ=Europe/London
    ports:
      - 8384:8384
      - 22000:22000
      - 21027:21027/udp
    volumes:
      - ${DOCKER_APP_DATA}/syncthing:/config
      - ${DOCKER_APP_DATA}/data:/data
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.syncthing.rule=Host(`sync.${INET_DOMAIN}`)
      - traefik.http.routers.syncthing.entrypoints=websecure
      - traefik.http.routers.syncthing.tls=true
      - traefik.http.routers.syncthing.tls.certresolver=letsencrypt
      - traefik.http.routers.syncthing.service=syncthing
      - traefik.http.services.syncthing.loadbalancer.server.port=8384

networks:
  default:
    external:
      name: web